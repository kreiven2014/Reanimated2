# require_relative '../node_modules/react-native/scripts/react_native_pods'
# require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

# platform :ios, '12.1'

# target 'RN66' do
#   config = use_native_modules!

#   use_react_native!(
#     :path => config[:reactNativePath],
#     # to enable hermes on iOS, change `false` to `true` and then install pods
#     :hermes_enabled => false
#   )

#   target 'RN66Tests' do
#     inherit! :complete
#     # Pods for testing
#   end

#   # Enables Flipper.
#   #
#   # Note that if you have use_frameworks! enabled, Flipper will not work and
#   # you should disable the next line.
#   use_flipper!()

#   post_install do |installer|
#     react_native_post_install(installer)
#     __apply_Xcode_12_5_M1_post_install_workaround(installer)
#   end
# end


require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('@react-native-community/cli-platform-ios/package.json')"`), "native_modules")

platform :ios, '12.1'

require 'json'
podfile_properties = JSON.parse(File.read('./Podfile.properties.json')) rescue {}

target 'RN66' do
  use_expo_modules!
  post_integrate do |installer|
    expo_patch_react_imports!(installer)
  end
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == 'hermes'
  )

  target 'RN66Tests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  use_flipper!({ 'Flipper' => '0.158.0' })

  # permissions_path = '../node_modules/react-native-permissions/ios'

  pod 'RNReanimated', :path => '../node_modules/react-native-reanimated'
  # pod 'Permission-BluetoothPeripheral', :path => "#{permissions_path}/BluetoothPeripheral"
  # pod 'Permission-LocationAlways', :path => "#{permissions_path}/LocationAlways"
  # pod 'Permission-LocationWhenInUse', :path => "#{permissions_path}/LocationWhenInUse"


  # add the Firebase pod for Google Analytics
 
  # or pod ‘Firebase/AnalyticsWithoutAdIdSupport’
  # for Analytics without IDFA collection capability

  # add pods for any other desired Firebase products
  # https://firebase.google.com/docs/ios/setup#available-pods


  #third-party fix for libraries like MAPBOX
  # pre_install do |installer|
  #   $RNMBGL.pre_install(installer)
  # end

  # post_install do |installer|
  #   $RNMBGL.post_install(installer)
  #   react_native_post_install(installer)
  #   __apply_Xcode_12_5_M1_post_install_workaround(installer)
  #   # Workaround `Cycle inside FBReactNativeSpec` error for react-native 0.64
  #   # Reference: https://github.com/software-mansion/react-native-screens/issues/842#issuecomment-812543933
  #   installer.pods_project.targets.each do |target|
  #     if (target.name&.eql?('FBReactNativeSpec'))
  #       target.build_phases.each do |build_phase|
  #         if (build_phase.respond_to?(:name) && build_phase.name.eql?('[CP-User] Generate Specs'))
  #           target.build_phases.move(build_phase, 0)
  #         end
  #       end
  #     end
  #   end
  #   installer.pods_project.build_configurations.each do |config|
  #     config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
  #   end
  # end
end
